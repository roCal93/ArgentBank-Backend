swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http

paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '201':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /accounts:
    get:
      security:
        - Bearer: []
      tags:
        - Account Module
      summary: Account API
      description: API for fetching accounts
      parameters:
        - in: query
          name: userId
          description: ID of the user to fetch accounts for
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Accounts retrieved successfully
          schema:
            $ref: '#/definitions/AccountListResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Transaction API
      description: API for fetching account transactions
      parameters:
        - in: query
          name: accountId
          description: ID of the account to fetch transactions for
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transactions retrieved successfully
          schema:
            $ref: '#/definitions/TransactionListResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /notes:
    post:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Add a Note to a Transaction
      description: Allows users to add a note to a specific transaction by ID.
      parameters:
        - in: body
          name: body
          description: Note
          required: true
          schema:
            $ref: '#/definitions/Note'
      produces:
        - application/json
      responses:
        '201':
          description: Note successfully added to the transaction
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error

    delete:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Delete a Note from a Transaction
      description: Allows users to delete a note from a specific transaction by ID.
      parameters:
        - in: body
          name: body
          description: Note
          required: true
          schema:
            $ref: '#/definitions/DeleteNote'
      produces:
        - application/json
      responses:
        '200':
          description: Note successfully deleted
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '404':
          description: Note not found
        '500':
          description: Internal Server Error

  /categories:
    get:
      tags:
        - Category Module
      summary: Retrieve Categories
      description: API for retrieving available transaction categories
      produces:
        - application/json
      responses:
        '200':
          description: Categories retrieved successfully
          schema:
            type: array
            items:
              type: string
        '500':
          description: Internal Server Error

    post:
      security:
        - Bearer: []
      tags:
        - Category Module
      summary: Add a Category to a Transaction
      description: Allows users to add a category to a specific transaction by ID.
      parameters:
        - in: body
          name: body
          description: Category
          required: true
          schema:
            $ref: '#/definitions/Category'
      produces:
        - application/json
      responses:
        '201':
          description: Category successfully added to a transaction
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name

  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  UserProfile:
    type: object
    properties:
      userName:
        type: string

  Note:
    properties:
      transactionId:
        type: string
        description: ID of the transaction
      note:
        type: string

  DeleteNote:
    properties:
      transactionId:
        type: string
        description: ID of the transaction
      noteId:
        type: string

  Category:
    properties:
      transactionId:
        type: string
        description: ID of transaction
      category:
        type: string

  Account:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
      balance:
        type: number
        format: float

  Transaction:
    type: object
    properties:
      id:
        type: string
      date:
        type: string
      title:
        type: string
      amount:
        type: number
        format: float
      type:
        type: string
      note:
        type: string
      category:
        type: string

  AccountListResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: array
        items:
          $ref: '#/definitions/Account'

  TransactionListResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: array
        items:
          $ref: '#/definitions/Transaction'
