swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http

paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for user authentication
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login successful
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal Server Error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for user registration
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '201':
          description: Signup successful
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal Server Error

  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Get user profile
      description: API for fetching a user profile
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid fields
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal Server Error

  /accounts:
    get:
      security:
        - Bearer: []
      tags:
        - Account Module
      summary: List accounts
      description: API for fetching all accounts of the authenticated user
      produces:
        - application/json
      responses:
        '200':
          description: Accounts retrieved successfully
          schema:
            $ref: '#/definitions/AccountListResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal Server Error

  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: List transactions by month and year
      description: API for fetching transactions of a given account filtered by month and year.
      parameters:
        - in: query
          name: accountId
          required: true
          type: string
        - in: query
          name: month
          type: integer
          minimum: 1
          maximum: 12
          description: Month number (1-12) to filter transactions
        - in: query
          name: year
          type: integer
          description: 4-digit year to filter transactions
      produces:
        - application/json
      responses:
        '200':
          description: Transactions retrieved successfully
          schema:
            $ref: '#/definitions/TransactionListResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal Server Error

  /transactions/{transactionId}/notes:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get notes for a transaction
      description: Retrieve all notes associated with a specific transaction
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Notes retrieved successfully
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              body:
                type: array
                items:
                  $ref: '#/definitions/Note'
        '400':
          description: Invalid fields
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error

  /transactions/{transactionId}/add-note:
    post:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Add a note to a transaction
      description: Allows users to add a note to a specific transaction by ID
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              note:
                type: string
      produces:
        - application/json
      responses:
        '201':
          description: Note successfully added to the transaction
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid fields
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error

  /transactions/{transactionId}/delete-note/{noteId}:
    delete:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Delete a note from a transaction
      description: Allows users to delete a note by its ID from a specific transaction
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
        - name: noteId
          in: path
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Note successfully deleted
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid fields
        '404':
          description: Note not found
        '500':
          description: Internal Server Error

  /transactions/{transactionId}/category:
    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Set or update transaction category
      description: Assign or update the category for a specific transaction by ID. categoryId must come from the list provided by /categories.
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - categoryId
            properties:
              categoryId:
                type: string
      produces:
        - application/json                
      responses:
        '200':
          description: Category successfully set or updated
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid fields
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error

  /categories:
    get:
      tags:
        - Category Module
      summary: Retrieve categories
      description: API for retrieving available transaction categories
      produces:
        - application/json
      responses:
        '200':
          description: Categories retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/Category'
        '500':
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    properties:
      email:
        type: string
      password:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      userName:
        type: string

  Login:
    properties:
      email:
        type: string
      password:
        type: string

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  UserProfile:
    type: object
    properties:
      userName:
        type: string

  Account:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
      balance:
        type: number
        format: float

  Transaction:
    type: object
    properties:
      id:
        type: string
      date:
        type: string
        format: date-time
      title:
        type: string
      amount:
        type: number
        format: float
      type:
        type: string
      category:
        type: object
        properties:
          id:
            type: string
          name:
            type: string
  Note:
    type: object
    properties:
      id:
        type: string
      content:
        type: string

  AccountListResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: array
        items:
          $ref: '#/definitions/Account'

  TransactionListResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: array
        items:
          $ref: '#/definitions/Transaction'

  Category:
    type: object
    properties:
      id:
        type: string
      name:
        type: string